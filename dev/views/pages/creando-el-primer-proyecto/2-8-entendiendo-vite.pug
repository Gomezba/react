extends ../../templates/template 

append h1 
    h1 Entendiendo como funciona Vite

append content 
    article(id="1" class="content")
        h2 Entendiendo Vite
        p Ahora que ya tenemos una idea general sobre qué es y cómo funciona Vite, vamos a intentar entender qué es todo este proyecto que nos ha montado y ver cómo funciona exactamente, detallando un poco más todo lo que hace detrás de escena.
        p Para ello dejaremos nuestro proyecto de la siguiente manera.

        img(src="../../assets/img/2-8-entendiendo-vite/1.webp" alt="example").img-hg

        p Eliminamos el contenido del archivo 
            strong main.jsx
            |   para poder recrearlo desde cero y entender como funciona.

        img(src="../../assets/img/2-8-entendiendo-vite/2.webp" alt="example")

        p Ahora empezaremos por crear un H1 en nuestro 
            strong main.jsx

        div.has-mb: pre: code.language-jsx 
            |import ReactDOM from 'react-dom'
            |
            |const container = document.getElementById('root')
            |const root = ReactDOM.createRoot(container)
            |
            |const h1 = &lt;h1&gt;Gomezba&lt;/h1&gt;
            |
            |root.render(h1)

        img(src="../../assets/img/2-8-entendiendo-vite/3.webp" alt="example").img-md

        p Como podemos ver todo funciona bien, pero quizás te preguntes varias cosas, como: 
            strong ¿Por qué el main tiene la extensión JSX?
            |   o 
            strong ¿Como es qué funciona el código, si no ocupamos "import react from 'react' " si se supone que se debe utilizar cuando utilizamos código JSX?

        p Bueno, en el contexto de 
            strong Vite
            |   y 
            strong React
            | , la razón por la que el archivo 
            strong main
            |   tiene la extensión 
            strong .jsx
            |   es para indicar que contiene código 
            strong JSX
            | . Los archivos con esta extensión son interpretados automáticamente por 
            strong Vite
            |   como código que contiene 
            strong JSX
            | , y este es transformado a 
            strong JavaScript
            |   mediante un transpilador como esbuild (en desarrollo) o Rollup (en producción).

        p El motivo de este manejo es que en un proyecto puede haber archivos JS que no necesitan utilizar la sintaxis JSX. Por lo tanto, Vite, para diferenciar entre archivos JS y JSX, decide agregar la extensión .jsx, de modo que, en lugar de transpilarlos todos, solo se enfoque en aquellos que tengan esta extensión, aplicando el loader solo a esos archivos.    

        p En cuanto a la pregunta de 
            strong por qué no es necesario importar react para usar JSX
            | , esto es gracias a una mejora introducida en 
            strong React 18 
            |   llamada la 
            strong "nueva transformación de JSX" (JSX Transform)
            | . Anteriormente, era obligatorio importar React explícitamente porque el compilador necesitaba la función React.createElement para transformar JSX en llamadas de función. Sin embargo, a partir de React 18, esta transformación se maneja automáticamente bajo el capó, por lo que ya no es necesario importar React en cada archivo que utilice JSX.

        h3 Agregar CSS  
        p Para agregar los estilos, tenemos dos formas: la tradicional, utilizando la etiqueta 
            strong &lt;link&gt;
            |   en el HTML para enlazar los estilos, o importándolos directamente desde el código 
            strong JSX
            | .

        h4 Forma tradicional    
        p En nuestra carpeta 
            strong src
            |   creamos nuestro archivo 
            strong index.css
            |   y lo enlazamos en nuestro html

        div.has-mb: pre: code.language-html 
            |&lt;!DOCTYPE html&gt;
            |&lt;html lang="es"&gt;
            |	&lt;head&gt;
            |		&lt;meta charset="UTF-8" /&gt;
            |		&lt;link rel="icon" type="image/svg+xml" href="/vite.svg" /&gt;
            |		&lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&gt;
            |		&lt;title&gt;Vite + React&lt;/title&gt;
            |		&lt;!-- Enlazmos nuestros estilos de forma tradicional --&gt;
            |		&lt;link rel="stylesheet" href="/src/index.css" /&gt;
            |	&lt;/head&gt;
            |	&lt;body&gt;
            |		&lt;div id="root"&gt;&lt;/div&gt;
            |		&lt;script type="module" src="/src/main.jsx"&gt;&lt;/script&gt;
            |	&lt;/body&gt;
            |&lt;/html&gt;

        img(src="../../assets/img/2-8-entendiendo-vite/4.webp" alt="example")
        p Ejecutamos nuestro servidor de desarrollo 
            strong npm run dev
            |.

        img(src="../../assets/img/2-8-entendiendo-vite/5.webp" alt="example").img-md

        h4 Importando directamente desde el código 

        p Otra manera de agregar nuestros estilos, es importando directamente desde el código y de hecho es la manera más utilizada.

        p Comentamos el enlace del html. 

        div: pre: code.language-html 
            |&lt;!DOCTYPE html&gt;
            |&lt;html lang="es"&gt;
            |	&lt;head&gt;
            |		&lt;meta charset="UTF-8" /&gt;
            |		&lt;link rel="icon" type="image/svg+xml" href="/vite.svg" /&gt;
            |		&lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&gt;
            |		&lt;title&gt;Vite + React&lt;/title&gt;
            |		&lt;!-- &lt;link rel="stylesheet" href="/src/index.css" /&gt; --&gt;
            |	&lt;/head&gt;
            |	&lt;body&gt;
            |		&lt;div id="root"&gt;&lt;/div&gt;
            |		&lt;script type="module" src="/src/main.jsx"&gt;&lt;/script&gt;
            |	&lt;/body&gt;
            |&lt;/html&gt;

        p Ahora desde nuestro 
            strong main.jsx 
            |   importaremos nuestros estilos.  
        div: pre: code.language-jsx
            |import ReactDOM from 'react-dom'
            |//Importamos el css
            |import './index.css'
            |
            |const container = document.getElementById('root')
            |const root = ReactDOM.createRoot(container)
            |
            |const h1 = &lt;h1&gt;Gomezba&lt;/h1&gt;
            |
            |root.render(h1)

        p Podemos observar que funciona.    

        img(src="../../assets/img/2-8-entendiendo-vite/5.webp" alt="example").img-md

        p Realmente, la posibilidad de hacerlo mediante un 
            strong import
            |   es posible porque tenemos un empaquetador detrás que procesa todos estos imports y sabe cómo manejarlos. Esta es, de hecho, la forma más habitual de tratar el CSS en React, ya que veremos que los componentes pueden dividir no solo su lógica y apariencia visual, sino también sus propias hojas de estilo, permitiendo tener todo completamente modularizado. De esta manera, podemos importar las hojas de estilo justo donde se requieran, asegurándonos de que cada componente tenga sus propios estilos, y al importar un componente, también importamos su CSS.

        h4 Cargando una imagen en modo desarrollo y producción
        p Todo lo que hemos visto hasta ahora funciona exactamente en 
            strong desarrollo
            |   como en 
            strong producción
            | , pero veremos uno de los casos donde esto no es así, y es una de las mayores fuentes de dudas que se suele tener con 
            strong Vite
            | . 

        p Intentaremos cargar una imagen.

        div: pre: code.language-jsx
            |import ReactDOM from 'react-dom'
            |import './index.css'
            |
            |const container = document.getElementById('root')
            |const root = ReactDOM.createRoot(container)
            |
            |// Cargamos una imagen
            |const img = &lt;img src='/src/assets/react.svg'&gt;&lt;/img&gt;
            |
            |root.render(img)

        p En nuestro servidor de desarollo esto funciona correctamente.

        img(src="../../assets/img/2-8-entendiendo-vite/6.webp" alt="example").img-md

        p Pero si ahora creamos la versión de producción: 
        p: code npm run build

        p Podemos observar que en la carpeta 
            strong dist
            | , y dentro de la carpeta 
            strong assets
            | , no se encuentra el logo (react.svg) que estamos queriendo visualizar.

        img(src="../../assets/img/2-8-entendiendo-vite/7.webp" alt="example").img-md

        p Entonces al correr nuestro servidor de producción o nuestra prueba de producción con el comando: 
        p: code npm run preview
        p Podemos ver que la imagen no se puede visualizar.

        img(src="../../assets/img/2-8-entendiendo-vite/8.webp" alt="example")

        p ¿Por qué está pasando esto? Porque hay que entender como funciona este 
            strong dev server
            |   (servidor de desarrollo) y como funciona esto en producción.
